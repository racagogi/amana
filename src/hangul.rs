use std::{str::FromStr, u32};

#[derive(Debug, PartialEq)]
pub enum Error {
    NotInRange(String),     // u32 <-> Jamo , u32 <-> ComatibilityJamo
    NotFoundMathed(String), // Jamo <-> ComatibilityJamo
    NotExistJamo(String),   // Jamo, ComatibilityJamo not exist combination
}

#[derive(Debug, PartialEq, Eq)]
enum Position {
    CHOSEONG,
    JUNGSEONG,
    JONGSEONG,
}

#[derive(Debug, PartialEq, Eq)]
enum Lettername {
    A,
    AEU,
    AO,
    AU,
    AE,
    ARAEA,
    ARAEAE, //NOTE ComatibilityJamo ARAEAE 318E, mathed ARAEAI 11A1,
    ARAEAEO,
    ARAEAI,
    ARAEAU,
    CEONGCHIEUMCHIEUCH,
    CEONGCHIEUMCIEUC,
    CEONGCHIEUMSIOS,
    CEONGCHIEUMSSANGCIEUC,
    CEONGCHIEUMSSANGSIOS,
    CHIEUCH,
    CHIEUCHHIEUH,
    CHIEUCHKHIEUKH,
    CHITUEUMCHIEUCH,
    CHITUEUMCIEUC,
    CHITUEUMSIOS,
    CHITUEUMSSANGCIEUC,
    CHITUEUMSSANGSIOS,
    CIEUC,
    CIEUCIEUNG,
    E,
    EO,
    EOEU,
    EOO,
    EOU,
    EU,
    EUEU,
    EUU,
    FILLER,
    HIEUH,
    HIEUHMIEUM,
    HIEUHNIEUN,
    HIEUHPIEUP,
    HIEUHRIEUL,
    I,
    IA,
    IARAEA,
    IEU,
    IO,
    IU,
    IYA,
    IEUNG,
    IEUNGCHIEUCH,
    IEUNGCIEUC,
    IEUNGKHIEUKH,
    IEUNGKIYEOK,
    IEUNGMIEUM,
    IEUNGPANSIOS,
    IEUNGPHIEUPH,
    IEUNGPIEUP,
    IEUNGSIOS,
    IEUNGSSANGKIYEOK,
    IEUNGTHIEUTH,
    IEUNGTIKEUT,
    KAPYEOUNMIEUM,
    KAPYEOUNPHIEUPH,
    KAPYEOUNPIEUP,
    KAPYEOUNRIEUL,
    KAPYEOUNSSANGPIEUP,
    KHIEUKH,
    KIYEOK,
    KIYEOKCHIEUCH,
    KIYEOKHIEUH,
    KIYEOKKHIEUKH,
    KIYEOKNIEUN,
    KIYEOKPIEUP,
    KIYEOKRIEUL,
    KIYEOKSIOS,
    KIYEOKSIOSKIYEOK,
    KIYEOKTIKEUT,
    MIEUM,
    MIEUMCHIEUCH,
    MIEUMHIEUH,
    MIEUMKIYEOK,
    MIEUMPANSIOS,
    MIEUMPIEUP,
    MIEUMRIEUL,
    MIEUMSIOS,
    MIEUMSSANGSIOS,
    NIEUN,
    NIEUNCIEUC,
    NIEUNHIEUH,
    NIEUNKIYEOK,
    NIEUNPANSIOS,
    NIEUNPIEUP,
    NIEUNSIOS,
    NIEUNTHIEUTH,
    NIEUNTIKEUT,
    O,
    Oe, //NOTE HANGUL JUNGSEONG O-E 0x1180
    OEO,
    OO,
    OU,
    OYA,
    OYAE,
    OYE,
    OE,
    PANSIOS,
    PHIEUPH,
    PHIEUPHPIEUP,
    PIEUP,
    PIEUPCHIEUCH,
    PIEUPCIEUC,
    PIEUPHIEUH,
    PIEUPKIYEOK,
    PIEUPNIEUN,
    PIEUPPHIEUPH,
    PIEUPRIEUL,
    PIEUPSIOS,
    PIEUPSIOSCIEUC,
    PIEUPSIOSKIYEOK,
    PIEUPSIOSPIEUP,
    PIEUPSIOSTIKEUT,
    PIEUPSSANGSIOS,
    PIEUPTHIEUTH,
    PIEUPTIKEUT,
    RIEUL,
    RIEULHIEUH,
    RIEULKAPYEOUNPIEUP,
    RIEULKHIEUKH,
    RIEULKIYEOK,
    RIEULKIYEOKSIOS,
    RIEULMIEUM,
    RIEULMIEUMKIYEOK,
    RIEULMIEUMSIOS,
    RIEULNIEUN,
    RIEULPANSIOS,
    RIEULPHIEUPH,
    RIEULPIEUP,
    RIEULPIEUPHIEUH,
    RIEULPIEUPSIOS,
    RIEULSIOS,
    RIEULSSANGSIOS,
    RIEULTHIEUTH,
    RIEULTIKEUT,
    RIEULTIKEUTHIEUH,
    RIEULYEORINHIEUH,
    SIOS,
    SIOSCHIEUCH,
    SIOSCIEUC,
    SIOSHIEUH,
    SIOSIEUNG,
    SIOSKHIEUKH,
    SIOSKIYEOK,
    SIOSMIEUM,
    SIOSNIEUN,
    SIOSPHIEUPH,
    SIOSPIEUP,
    SIOSPIEUPKIYEOK,
    SIOSRIEUL,
    SIOSSSANGSIOS,
    SIOSTHIEUTH,
    SIOSTIKEUT,
    SSANGARAEA,
    SSANGCIEUC,
    SSANGHIEUH,
    SSANGIEUNG,
    SSANGKIYEOK,
    SSANGNIEUN,
    SSANGPIEUP,
    SSANGRIEUL,
    SSANGSIOS,
    SSANGTIKEUT,
    // SSANGYESIEUNG,
    // `SSANGYESIEUNG`, `YESIEUNGKHIEUKH`, `YESIEUNGKIYEOK`, and `YESIEUNGSSANGKIYEOK` are
    // used hangul jamo plane
    THIEUTH,
    TIKEUT,
    TIKEUTKIYEOK,
    TIKEUTRIEUL,
    U,
    UA,
    UAE,
    UEOEU,
    UU,
    UYE,
    WA,
    WAE,
    WE,
    WEO,
    WI,
    YA,
    YAO,
    YAU,
    YAYO,
    YAE,
    YE,
    YEO,
    YEOO,
    YEOU,
    YEOYA,
    YEORINHIEUH,
    YESIEUNG,
    // YESIEUNGKHIEUKH,
    // YESIEUNGKIYEOK,
    YESIEUNGPANSIOS,
    YESIEUNGSIOS,
    // YESIEUNGSSANGKIYEOK,
    YI,
    YIU,
    YO,
    YOI,
    YOO,
    YOYA,
    YOYAE,
    YOYEO,
    YU,
    YUA,
    YUE,
    YUEO,
    YUI,
    YUU,
    YUYE,
    YUYEO,
}

#[derive(Debug, PartialEq, Eq)]
struct Jamo(Position, Lettername);

impl TryFrom<u32> for Jamo {
    type Error = self::Error;

    fn try_from(value: u32) -> Result<Self, Self::Error> {
        match value {
            0x1100 => Ok(Self(Position::CHOSEONG, Lettername::KIYEOK)),
            0x1101 => Ok(Self(Position::CHOSEONG, Lettername::SSANGKIYEOK)),
            0x1102 => Ok(Self(Position::CHOSEONG, Lettername::NIEUN)),
            0x1103 => Ok(Self(Position::CHOSEONG, Lettername::TIKEUT)),
            0x1104 => Ok(Self(Position::CHOSEONG, Lettername::SSANGTIKEUT)),
            0x1105 => Ok(Self(Position::CHOSEONG, Lettername::RIEUL)),
            0x1106 => Ok(Self(Position::CHOSEONG, Lettername::MIEUM)),
            0x1107 => Ok(Self(Position::CHOSEONG, Lettername::PIEUP)),
            0x1108 => Ok(Self(Position::CHOSEONG, Lettername::SSANGPIEUP)),
            0x1109 => Ok(Self(Position::CHOSEONG, Lettername::SIOS)),
            0x110A => Ok(Self(Position::CHOSEONG, Lettername::SSANGSIOS)),
            0x110B => Ok(Self(Position::CHOSEONG, Lettername::IEUNG)),
            0x110C => Ok(Self(Position::CHOSEONG, Lettername::CIEUC)),
            0x110D => Ok(Self(Position::CHOSEONG, Lettername::SSANGCIEUC)),
            0x110E => Ok(Self(Position::CHOSEONG, Lettername::CHIEUCH)),
            0x110F => Ok(Self(Position::CHOSEONG, Lettername::KHIEUKH)),
            0x1110 => Ok(Self(Position::CHOSEONG, Lettername::THIEUTH)),
            0x1111 => Ok(Self(Position::CHOSEONG, Lettername::PHIEUPH)),
            0x1112 => Ok(Self(Position::CHOSEONG, Lettername::HIEUH)),
            0x1113 => Ok(Self(Position::CHOSEONG, Lettername::NIEUNKIYEOK)),
            0x1114 => Ok(Self(Position::CHOSEONG, Lettername::SSANGNIEUN)),
            0x1115 => Ok(Self(Position::CHOSEONG, Lettername::NIEUNTIKEUT)),
            0x1116 => Ok(Self(Position::CHOSEONG, Lettername::NIEUNPIEUP)),
            0x1117 => Ok(Self(Position::CHOSEONG, Lettername::TIKEUTKIYEOK)),
            0x1118 => Ok(Self(Position::CHOSEONG, Lettername::RIEULNIEUN)),
            0x1119 => Ok(Self(Position::CHOSEONG, Lettername::SSANGRIEUL)),
            0x111A => Ok(Self(Position::CHOSEONG, Lettername::RIEULHIEUH)),
            0x111B => Ok(Self(Position::CHOSEONG, Lettername::KAPYEOUNRIEUL)),
            0x111C => Ok(Self(Position::CHOSEONG, Lettername::MIEUMPIEUP)),
            0x111D => Ok(Self(Position::CHOSEONG, Lettername::KAPYEOUNMIEUM)),
            0x111E => Ok(Self(Position::CHOSEONG, Lettername::PIEUPKIYEOK)),
            0x111F => Ok(Self(Position::CHOSEONG, Lettername::PIEUPNIEUN)),
            0x1120 => Ok(Self(Position::CHOSEONG, Lettername::PIEUPTIKEUT)),
            0x1121 => Ok(Self(Position::CHOSEONG, Lettername::PIEUPSIOS)),
            0x1122 => Ok(Self(Position::CHOSEONG, Lettername::PIEUPSIOSKIYEOK)),
            0x1123 => Ok(Self(Position::CHOSEONG, Lettername::PIEUPSIOSTIKEUT)),
            0x1124 => Ok(Self(Position::CHOSEONG, Lettername::PIEUPSIOSPIEUP)),
            0x1125 => Ok(Self(Position::CHOSEONG, Lettername::PIEUPSSANGSIOS)),
            0x1126 => Ok(Self(Position::CHOSEONG, Lettername::PIEUPSIOSCIEUC)),
            0x1127 => Ok(Self(Position::CHOSEONG, Lettername::PIEUPCIEUC)),
            0x1128 => Ok(Self(Position::CHOSEONG, Lettername::PIEUPCHIEUCH)),
            0x1129 => Ok(Self(Position::CHOSEONG, Lettername::PIEUPTHIEUTH)),
            0x112A => Ok(Self(Position::CHOSEONG, Lettername::PIEUPPHIEUPH)),
            0x112B => Ok(Self(Position::CHOSEONG, Lettername::KAPYEOUNPIEUP)),
            0x112C => Ok(Self(Position::CHOSEONG, Lettername::KAPYEOUNSSANGPIEUP)),
            0x112D => Ok(Self(Position::CHOSEONG, Lettername::SIOSKIYEOK)),
            0x112E => Ok(Self(Position::CHOSEONG, Lettername::SIOSNIEUN)),
            0x112F => Ok(Self(Position::CHOSEONG, Lettername::SIOSTIKEUT)),
            0x1130 => Ok(Self(Position::CHOSEONG, Lettername::SIOSRIEUL)),
            0x1131 => Ok(Self(Position::CHOSEONG, Lettername::SIOSMIEUM)),
            0x1132 => Ok(Self(Position::CHOSEONG, Lettername::SIOSPIEUP)),
            0x1133 => Ok(Self(Position::CHOSEONG, Lettername::SIOSPIEUPKIYEOK)),
            0x1134 => Ok(Self(Position::CHOSEONG, Lettername::SIOSSSANGSIOS)),
            0x1135 => Ok(Self(Position::CHOSEONG, Lettername::SIOSIEUNG)),
            0x1136 => Ok(Self(Position::CHOSEONG, Lettername::SIOSCIEUC)),
            0x1137 => Ok(Self(Position::CHOSEONG, Lettername::SIOSCHIEUCH)),
            0x1138 => Ok(Self(Position::CHOSEONG, Lettername::SIOSKHIEUKH)),
            0x1139 => Ok(Self(Position::CHOSEONG, Lettername::SIOSTHIEUTH)),
            0x113A => Ok(Self(Position::CHOSEONG, Lettername::SIOSPHIEUPH)),
            0x113B => Ok(Self(Position::CHOSEONG, Lettername::SIOSHIEUH)),
            0x113C => Ok(Self(Position::CHOSEONG, Lettername::CHITUEUMSIOS)),
            0x113D => Ok(Self(Position::CHOSEONG, Lettername::CHITUEUMSSANGSIOS)),
            0x113E => Ok(Self(Position::CHOSEONG, Lettername::CEONGCHIEUMSIOS)),
            0x113F => Ok(Self(Position::CHOSEONG, Lettername::CEONGCHIEUMSSANGSIOS)),
            0x1140 => Ok(Self(Position::CHOSEONG, Lettername::PANSIOS)),
            0x1141 => Ok(Self(Position::CHOSEONG, Lettername::IEUNGKIYEOK)),
            0x1142 => Ok(Self(Position::CHOSEONG, Lettername::IEUNGTIKEUT)),
            0x1143 => Ok(Self(Position::CHOSEONG, Lettername::IEUNGMIEUM)),
            0x1144 => Ok(Self(Position::CHOSEONG, Lettername::IEUNGPIEUP)),
            0x1145 => Ok(Self(Position::CHOSEONG, Lettername::IEUNGSIOS)),
            0x1146 => Ok(Self(Position::CHOSEONG, Lettername::IEUNGPANSIOS)),
            0x1147 => Ok(Self(Position::CHOSEONG, Lettername::SSANGIEUNG)),
            0x1148 => Ok(Self(Position::CHOSEONG, Lettername::IEUNGCIEUC)),
            0x1149 => Ok(Self(Position::CHOSEONG, Lettername::IEUNGCHIEUCH)),
            0x114A => Ok(Self(Position::CHOSEONG, Lettername::IEUNGTHIEUTH)),
            0x114B => Ok(Self(Position::CHOSEONG, Lettername::IEUNGPHIEUPH)),
            0x114C => Ok(Self(Position::CHOSEONG, Lettername::YESIEUNG)),
            0x114D => Ok(Self(Position::CHOSEONG, Lettername::CIEUCIEUNG)),
            0x114E => Ok(Self(Position::CHOSEONG, Lettername::CHITUEUMCIEUC)),
            0x114F => Ok(Self(Position::CHOSEONG, Lettername::CHITUEUMSSANGCIEUC)),
            0x1150 => Ok(Self(Position::CHOSEONG, Lettername::CEONGCHIEUMCIEUC)),
            0x1151 => Ok(Self(Position::CHOSEONG, Lettername::CEONGCHIEUMSSANGCIEUC)),
            0x1152 => Ok(Self(Position::CHOSEONG, Lettername::CHIEUCHKHIEUKH)),
            0x1153 => Ok(Self(Position::CHOSEONG, Lettername::CHIEUCHHIEUH)),
            0x1154 => Ok(Self(Position::CHOSEONG, Lettername::CHITUEUMCHIEUCH)),
            0x1155 => Ok(Self(Position::CHOSEONG, Lettername::CEONGCHIEUMCHIEUCH)),
            0x1156 => Ok(Self(Position::CHOSEONG, Lettername::PHIEUPHPIEUP)),
            0x1157 => Ok(Self(Position::CHOSEONG, Lettername::KAPYEOUNPHIEUPH)),
            0x1158 => Ok(Self(Position::CHOSEONG, Lettername::SSANGHIEUH)),
            0x1159 => Ok(Self(Position::CHOSEONG, Lettername::YEORINHIEUH)),
            0x115A => Ok(Self(Position::CHOSEONG, Lettername::KIYEOKTIKEUT)),
            0x115B => Ok(Self(Position::CHOSEONG, Lettername::NIEUNSIOS)),
            0x115C => Ok(Self(Position::CHOSEONG, Lettername::NIEUNCIEUC)),
            0x115D => Ok(Self(Position::CHOSEONG, Lettername::NIEUNHIEUH)),
            0x115E => Ok(Self(Position::CHOSEONG, Lettername::TIKEUTRIEUL)),
            0x115F => Ok(Self(Position::CHOSEONG, Lettername::FILLER)),
            0x1160 => Ok(Self(Position::JUNGSEONG, Lettername::FILLER)),
            0x1161 => Ok(Self(Position::JUNGSEONG, Lettername::A)),
            0x1162 => Ok(Self(Position::JUNGSEONG, Lettername::AE)),
            0x1163 => Ok(Self(Position::JUNGSEONG, Lettername::YA)),
            0x1164 => Ok(Self(Position::JUNGSEONG, Lettername::YAE)),
            0x1165 => Ok(Self(Position::JUNGSEONG, Lettername::EO)),
            0x1166 => Ok(Self(Position::JUNGSEONG, Lettername::E)),
            0x1167 => Ok(Self(Position::JUNGSEONG, Lettername::YEO)),
            0x1168 => Ok(Self(Position::JUNGSEONG, Lettername::YE)),
            0x1169 => Ok(Self(Position::JUNGSEONG, Lettername::O)),
            0x116A => Ok(Self(Position::JUNGSEONG, Lettername::WA)),
            0x116B => Ok(Self(Position::JUNGSEONG, Lettername::WAE)),
            0x116C => Ok(Self(Position::JUNGSEONG, Lettername::OE)),
            0x116D => Ok(Self(Position::JUNGSEONG, Lettername::YO)),
            0x116E => Ok(Self(Position::JUNGSEONG, Lettername::U)),
            0x116F => Ok(Self(Position::JUNGSEONG, Lettername::WEO)),
            0x1170 => Ok(Self(Position::JUNGSEONG, Lettername::WE)),
            0x1171 => Ok(Self(Position::JUNGSEONG, Lettername::WI)),
            0x1172 => Ok(Self(Position::JUNGSEONG, Lettername::YU)),
            0x1173 => Ok(Self(Position::JUNGSEONG, Lettername::EU)),
            0x1174 => Ok(Self(Position::JUNGSEONG, Lettername::YI)),
            0x1175 => Ok(Self(Position::JUNGSEONG, Lettername::I)),
            0x1176 => Ok(Self(Position::JUNGSEONG, Lettername::AO)),
            0x1177 => Ok(Self(Position::JUNGSEONG, Lettername::AU)),
            0x1178 => Ok(Self(Position::JUNGSEONG, Lettername::YAO)),
            0x1179 => Ok(Self(Position::JUNGSEONG, Lettername::YAYO)),
            0x117A => Ok(Self(Position::JUNGSEONG, Lettername::EOO)),
            0x117B => Ok(Self(Position::JUNGSEONG, Lettername::EOU)),
            0x117C => Ok(Self(Position::JUNGSEONG, Lettername::EOEU)),
            0x117D => Ok(Self(Position::JUNGSEONG, Lettername::YEOO)),
            0x117E => Ok(Self(Position::JUNGSEONG, Lettername::YEOU)),
            0x117F => Ok(Self(Position::JUNGSEONG, Lettername::OEO)),
            0x1180 => Ok(Self(Position::JUNGSEONG, Lettername::Oe)),
            0x1181 => Ok(Self(Position::JUNGSEONG, Lettername::OYE)),
            0x1182 => Ok(Self(Position::JUNGSEONG, Lettername::OO)),
            0x1183 => Ok(Self(Position::JUNGSEONG, Lettername::OU)),
            0x1184 => Ok(Self(Position::JUNGSEONG, Lettername::YOYA)),
            0x1185 => Ok(Self(Position::JUNGSEONG, Lettername::YOYAE)),
            0x1186 => Ok(Self(Position::JUNGSEONG, Lettername::YOYEO)),
            0x1187 => Ok(Self(Position::JUNGSEONG, Lettername::YOO)),
            0x1188 => Ok(Self(Position::JUNGSEONG, Lettername::YOI)),
            0x1189 => Ok(Self(Position::JUNGSEONG, Lettername::UA)),
            0x118A => Ok(Self(Position::JUNGSEONG, Lettername::UAE)),
            0x118B => Ok(Self(Position::JUNGSEONG, Lettername::UEOEU)),
            0x118C => Ok(Self(Position::JUNGSEONG, Lettername::UYE)),
            0x118D => Ok(Self(Position::JUNGSEONG, Lettername::UU)),
            0x118E => Ok(Self(Position::JUNGSEONG, Lettername::YUA)),
            0x118F => Ok(Self(Position::JUNGSEONG, Lettername::YUEO)),
            0x1190 => Ok(Self(Position::JUNGSEONG, Lettername::YUE)),
            0x1191 => Ok(Self(Position::JUNGSEONG, Lettername::YUYEO)),
            0x1192 => Ok(Self(Position::JUNGSEONG, Lettername::YUYE)),
            0x1193 => Ok(Self(Position::JUNGSEONG, Lettername::YUU)),
            0x1194 => Ok(Self(Position::JUNGSEONG, Lettername::YUI)),
            0x1195 => Ok(Self(Position::JUNGSEONG, Lettername::EUU)),
            0x1196 => Ok(Self(Position::JUNGSEONG, Lettername::EUEU)),
            0x1197 => Ok(Self(Position::JUNGSEONG, Lettername::YIU)),
            0x1198 => Ok(Self(Position::JUNGSEONG, Lettername::IA)),
            0x1199 => Ok(Self(Position::JUNGSEONG, Lettername::IYA)),
            0x119A => Ok(Self(Position::JUNGSEONG, Lettername::IO)),
            0x119B => Ok(Self(Position::JUNGSEONG, Lettername::IU)),
            0x119C => Ok(Self(Position::JUNGSEONG, Lettername::IEU)),
            0x119D => Ok(Self(Position::JUNGSEONG, Lettername::IARAEA)),
            0x119E => Ok(Self(Position::JUNGSEONG, Lettername::ARAEA)),
            0x119F => Ok(Self(Position::JUNGSEONG, Lettername::ARAEAEO)),
            0x11A0 => Ok(Self(Position::JUNGSEONG, Lettername::ARAEAU)),
            0x11A1 => Ok(Self(Position::JUNGSEONG, Lettername::ARAEAI)),
            0x11A2 => Ok(Self(Position::JUNGSEONG, Lettername::SSANGARAEA)),
            0x11A3 => Ok(Self(Position::JUNGSEONG, Lettername::AEU)),
            0x11A4 => Ok(Self(Position::JUNGSEONG, Lettername::YAU)),
            0x11A5 => Ok(Self(Position::JUNGSEONG, Lettername::YEOYA)),
            0x11A6 => Ok(Self(Position::JUNGSEONG, Lettername::OYA)),
            0x11A7 => Ok(Self(Position::JUNGSEONG, Lettername::OYAE)),
            0x11A8 => Ok(Self(Position::JONGSEONG, Lettername::KIYEOK)),
            0x11A9 => Ok(Self(Position::JONGSEONG, Lettername::SSANGKIYEOK)),
            0x11AA => Ok(Self(Position::JONGSEONG, Lettername::KIYEOKSIOS)),
            0x11AB => Ok(Self(Position::JONGSEONG, Lettername::NIEUN)),
            0x11AC => Ok(Self(Position::JONGSEONG, Lettername::NIEUNCIEUC)),
            0x11AD => Ok(Self(Position::JONGSEONG, Lettername::NIEUNHIEUH)),
            0x11AE => Ok(Self(Position::JONGSEONG, Lettername::TIKEUT)),
            0x11AF => Ok(Self(Position::JONGSEONG, Lettername::RIEUL)),
            0x11B0 => Ok(Self(Position::JONGSEONG, Lettername::RIEULKIYEOK)),
            0x11B1 => Ok(Self(Position::JONGSEONG, Lettername::RIEULMIEUM)),
            0x11B2 => Ok(Self(Position::JONGSEONG, Lettername::RIEULPIEUP)),
            0x11B3 => Ok(Self(Position::JONGSEONG, Lettername::RIEULSIOS)),
            0x11B4 => Ok(Self(Position::JONGSEONG, Lettername::RIEULTHIEUTH)),
            0x11B5 => Ok(Self(Position::JONGSEONG, Lettername::RIEULPHIEUPH)),
            0x11B6 => Ok(Self(Position::JONGSEONG, Lettername::RIEULHIEUH)),
            0x11B7 => Ok(Self(Position::JONGSEONG, Lettername::MIEUM)),
            0x11B8 => Ok(Self(Position::JONGSEONG, Lettername::PIEUP)),
            0x11B9 => Ok(Self(Position::JONGSEONG, Lettername::PIEUPSIOS)),
            0x11BA => Ok(Self(Position::JONGSEONG, Lettername::SIOS)),
            0x11BB => Ok(Self(Position::JONGSEONG, Lettername::SSANGSIOS)),
            0x11BC => Ok(Self(Position::JONGSEONG, Lettername::IEUNG)),
            0x11BD => Ok(Self(Position::JONGSEONG, Lettername::CIEUC)),
            0x11BE => Ok(Self(Position::JONGSEONG, Lettername::CHIEUCH)),
            0x11BF => Ok(Self(Position::JONGSEONG, Lettername::KHIEUKH)),
            0x11C0 => Ok(Self(Position::JONGSEONG, Lettername::THIEUTH)),
            0x11C1 => Ok(Self(Position::JONGSEONG, Lettername::PHIEUPH)),
            0x11C2 => Ok(Self(Position::JONGSEONG, Lettername::HIEUH)),
            0x11C3 => Ok(Self(Position::JONGSEONG, Lettername::KIYEOKRIEUL)),
            0x11C4 => Ok(Self(Position::JONGSEONG, Lettername::KIYEOKSIOSKIYEOK)),
            0x11C5 => Ok(Self(Position::JONGSEONG, Lettername::NIEUNKIYEOK)),
            0x11C6 => Ok(Self(Position::JONGSEONG, Lettername::NIEUNTIKEUT)),
            0x11C7 => Ok(Self(Position::JONGSEONG, Lettername::NIEUNSIOS)),
            0x11C8 => Ok(Self(Position::JONGSEONG, Lettername::NIEUNPANSIOS)),
            0x11C9 => Ok(Self(Position::JONGSEONG, Lettername::NIEUNTHIEUTH)),
            0x11CA => Ok(Self(Position::JONGSEONG, Lettername::TIKEUTKIYEOK)),
            0x11CB => Ok(Self(Position::JONGSEONG, Lettername::TIKEUTRIEUL)),
            0x11CC => Ok(Self(Position::JONGSEONG, Lettername::RIEULKIYEOKSIOS)),
            0x11CD => Ok(Self(Position::JONGSEONG, Lettername::RIEULNIEUN)),
            0x11CE => Ok(Self(Position::JONGSEONG, Lettername::RIEULTIKEUT)),
            0x11CF => Ok(Self(Position::JONGSEONG, Lettername::RIEULTIKEUTHIEUH)),
            0x11D0 => Ok(Self(Position::JONGSEONG, Lettername::SSANGRIEUL)),
            0x11D1 => Ok(Self(Position::JONGSEONG, Lettername::RIEULMIEUMKIYEOK)),
            0x11D2 => Ok(Self(Position::JONGSEONG, Lettername::RIEULMIEUMSIOS)),
            0x11D3 => Ok(Self(Position::JONGSEONG, Lettername::RIEULPIEUPSIOS)),
            0x11D4 => Ok(Self(Position::JONGSEONG, Lettername::RIEULPIEUPHIEUH)),
            0x11D5 => Ok(Self(Position::JONGSEONG, Lettername::RIEULKAPYEOUNPIEUP)),
            0x11D6 => Ok(Self(Position::JONGSEONG, Lettername::RIEULSSANGSIOS)),
            0x11D7 => Ok(Self(Position::JONGSEONG, Lettername::RIEULPANSIOS)),
            0x11D8 => Ok(Self(Position::JONGSEONG, Lettername::RIEULKHIEUKH)),
            0x11D9 => Ok(Self(Position::JONGSEONG, Lettername::RIEULYEORINHIEUH)),
            0x11DA => Ok(Self(Position::JONGSEONG, Lettername::MIEUMKIYEOK)),
            0x11DB => Ok(Self(Position::JONGSEONG, Lettername::MIEUMRIEUL)),
            0x11DC => Ok(Self(Position::JONGSEONG, Lettername::MIEUMPIEUP)),
            0x11DD => Ok(Self(Position::JONGSEONG, Lettername::MIEUMSIOS)),
            0x11DE => Ok(Self(Position::JONGSEONG, Lettername::MIEUMSSANGSIOS)),
            0x11DF => Ok(Self(Position::JONGSEONG, Lettername::MIEUMPANSIOS)),
            0x11E0 => Ok(Self(Position::JONGSEONG, Lettername::MIEUMCHIEUCH)),
            0x11E1 => Ok(Self(Position::JONGSEONG, Lettername::MIEUMHIEUH)),
            0x11E2 => Ok(Self(Position::JONGSEONG, Lettername::KAPYEOUNMIEUM)),
            0x11E3 => Ok(Self(Position::JONGSEONG, Lettername::PIEUPRIEUL)),
            0x11E4 => Ok(Self(Position::JONGSEONG, Lettername::PIEUPPHIEUPH)),
            0x11E5 => Ok(Self(Position::JONGSEONG, Lettername::PIEUPHIEUH)),
            0x11E6 => Ok(Self(Position::JONGSEONG, Lettername::KAPYEOUNPIEUP)),
            0x11E7 => Ok(Self(Position::JONGSEONG, Lettername::SIOSKIYEOK)),
            0x11E8 => Ok(Self(Position::JONGSEONG, Lettername::SIOSTIKEUT)),
            0x11E9 => Ok(Self(Position::JONGSEONG, Lettername::SIOSRIEUL)),
            0x11EA => Ok(Self(Position::JONGSEONG, Lettername::SIOSPIEUP)),
            0x11EB => Ok(Self(Position::JONGSEONG, Lettername::PANSIOS)),
            0x11EC => Ok(Self(Position::JONGSEONG, Lettername::IEUNGKIYEOK)),
            0x11ED => Ok(Self(Position::JONGSEONG, Lettername::IEUNGSSANGKIYEOK)),
            0x11EE => Ok(Self(Position::JONGSEONG, Lettername::SSANGIEUNG)),
            0x11EF => Ok(Self(Position::JONGSEONG, Lettername::IEUNGKHIEUKH)),
            0x11F0 => Ok(Self(Position::JONGSEONG, Lettername::YESIEUNG)),
            0x11F1 => Ok(Self(Position::JONGSEONG, Lettername::YESIEUNGSIOS)),
            0x11F2 => Ok(Self(Position::JONGSEONG, Lettername::YESIEUNGPANSIOS)),
            0x11F3 => Ok(Self(Position::JONGSEONG, Lettername::PHIEUPHPIEUP)),
            0x11F4 => Ok(Self(Position::JONGSEONG, Lettername::KAPYEOUNPHIEUPH)),
            0x11F5 => Ok(Self(Position::JONGSEONG, Lettername::HIEUHNIEUN)),
            0x11F6 => Ok(Self(Position::JONGSEONG, Lettername::HIEUHRIEUL)),
            0x11F7 => Ok(Self(Position::JONGSEONG, Lettername::HIEUHMIEUM)),
            0x11F8 => Ok(Self(Position::JONGSEONG, Lettername::HIEUHPIEUP)),
            0x11F9 => Ok(Self(Position::JONGSEONG, Lettername::YEORINHIEUH)),
            0x11FA => Ok(Self(Position::JONGSEONG, Lettername::KIYEOKNIEUN)),
            0x11FB => Ok(Self(Position::JONGSEONG, Lettername::KIYEOKPIEUP)),
            0x11FC => Ok(Self(Position::JONGSEONG, Lettername::KIYEOKCHIEUCH)),
            0x11FD => Ok(Self(Position::JONGSEONG, Lettername::KIYEOKKHIEUKH)),
            0x11FE => Ok(Self(Position::JONGSEONG, Lettername::KIYEOKHIEUH)),
            0x11FF => Ok(Self(Position::JONGSEONG, Lettername::SSANGNIEUN)),
            _ => Err(Error::NotInRange(String::from(format!("U+{:X}", value)))),
        }
    }
}

impl TryFrom<Jamo> for u32 {
    type Error = self::Error;

    fn try_from(value: Jamo) -> Result<Self, Self::Error> {
        match value {
            Jamo(Position::CHOSEONG, Lettername::KIYEOK) => Ok(0x1100),
            Jamo(Position::CHOSEONG, Lettername::SSANGKIYEOK) => Ok(0x1101),
            Jamo(Position::CHOSEONG, Lettername::NIEUN) => Ok(0x1102),
            Jamo(Position::CHOSEONG, Lettername::TIKEUT) => Ok(0x1103),
            Jamo(Position::CHOSEONG, Lettername::SSANGTIKEUT) => Ok(0x1104),
            Jamo(Position::CHOSEONG, Lettername::RIEUL) => Ok(0x1105),
            Jamo(Position::CHOSEONG, Lettername::MIEUM) => Ok(0x1106),
            Jamo(Position::CHOSEONG, Lettername::PIEUP) => Ok(0x1107),
            Jamo(Position::CHOSEONG, Lettername::SSANGPIEUP) => Ok(0x1108),
            Jamo(Position::CHOSEONG, Lettername::SIOS) => Ok(0x1109),
            Jamo(Position::CHOSEONG, Lettername::SSANGSIOS) => Ok(0x110A),
            Jamo(Position::CHOSEONG, Lettername::IEUNG) => Ok(0x110B),
            Jamo(Position::CHOSEONG, Lettername::CIEUC) => Ok(0x110C),
            Jamo(Position::CHOSEONG, Lettername::SSANGCIEUC) => Ok(0x110D),
            Jamo(Position::CHOSEONG, Lettername::CHIEUCH) => Ok(0x110E),
            Jamo(Position::CHOSEONG, Lettername::KHIEUKH) => Ok(0x110F),
            Jamo(Position::CHOSEONG, Lettername::THIEUTH) => Ok(0x1110),
            Jamo(Position::CHOSEONG, Lettername::PHIEUPH) => Ok(0x1111),
            Jamo(Position::CHOSEONG, Lettername::HIEUH) => Ok(0x1112),
            Jamo(Position::CHOSEONG, Lettername::NIEUNKIYEOK) => Ok(0x1113),
            Jamo(Position::CHOSEONG, Lettername::SSANGNIEUN) => Ok(0x1114),
            Jamo(Position::CHOSEONG, Lettername::NIEUNTIKEUT) => Ok(0x1115),
            Jamo(Position::CHOSEONG, Lettername::NIEUNPIEUP) => Ok(0x1116),
            Jamo(Position::CHOSEONG, Lettername::TIKEUTKIYEOK) => Ok(0x1117),
            Jamo(Position::CHOSEONG, Lettername::RIEULNIEUN) => Ok(0x1118),
            Jamo(Position::CHOSEONG, Lettername::SSANGRIEUL) => Ok(0x1119),
            Jamo(Position::CHOSEONG, Lettername::RIEULHIEUH) => Ok(0x111A),
            Jamo(Position::CHOSEONG, Lettername::KAPYEOUNRIEUL) => Ok(0x111B),
            Jamo(Position::CHOSEONG, Lettername::MIEUMPIEUP) => Ok(0x111C),
            Jamo(Position::CHOSEONG, Lettername::KAPYEOUNMIEUM) => Ok(0x111D),
            Jamo(Position::CHOSEONG, Lettername::PIEUPKIYEOK) => Ok(0x111E),
            Jamo(Position::CHOSEONG, Lettername::PIEUPNIEUN) => Ok(0x111F),
            Jamo(Position::CHOSEONG, Lettername::PIEUPTIKEUT) => Ok(0x1120),
            Jamo(Position::CHOSEONG, Lettername::PIEUPSIOS) => Ok(0x1121),
            Jamo(Position::CHOSEONG, Lettername::PIEUPSIOSKIYEOK) => Ok(0x1122),
            Jamo(Position::CHOSEONG, Lettername::PIEUPSIOSTIKEUT) => Ok(0x1123),
            Jamo(Position::CHOSEONG, Lettername::PIEUPSIOSPIEUP) => Ok(0x1124),
            Jamo(Position::CHOSEONG, Lettername::PIEUPSSANGSIOS) => Ok(0x1125),
            Jamo(Position::CHOSEONG, Lettername::PIEUPSIOSCIEUC) => Ok(0x1126),
            Jamo(Position::CHOSEONG, Lettername::PIEUPCIEUC) => Ok(0x1127),
            Jamo(Position::CHOSEONG, Lettername::PIEUPCHIEUCH) => Ok(0x1128),
            Jamo(Position::CHOSEONG, Lettername::PIEUPTHIEUTH) => Ok(0x1129),
            Jamo(Position::CHOSEONG, Lettername::PIEUPPHIEUPH) => Ok(0x112A),
            Jamo(Position::CHOSEONG, Lettername::KAPYEOUNPIEUP) => Ok(0x112B),
            Jamo(Position::CHOSEONG, Lettername::KAPYEOUNSSANGPIEUP) => Ok(0x112C),
            Jamo(Position::CHOSEONG, Lettername::SIOSKIYEOK) => Ok(0x112D),
            Jamo(Position::CHOSEONG, Lettername::SIOSNIEUN) => Ok(0x112E),
            Jamo(Position::CHOSEONG, Lettername::SIOSTIKEUT) => Ok(0x112F),
            Jamo(Position::CHOSEONG, Lettername::SIOSRIEUL) => Ok(0x1130),
            Jamo(Position::CHOSEONG, Lettername::SIOSMIEUM) => Ok(0x1131),
            Jamo(Position::CHOSEONG, Lettername::SIOSPIEUP) => Ok(0x1132),
            Jamo(Position::CHOSEONG, Lettername::SIOSPIEUPKIYEOK) => Ok(0x1133),
            Jamo(Position::CHOSEONG, Lettername::SIOSSSANGSIOS) => Ok(0x1134),
            Jamo(Position::CHOSEONG, Lettername::SIOSIEUNG) => Ok(0x1135),
            Jamo(Position::CHOSEONG, Lettername::SIOSCIEUC) => Ok(0x1136),
            Jamo(Position::CHOSEONG, Lettername::SIOSCHIEUCH) => Ok(0x1137),
            Jamo(Position::CHOSEONG, Lettername::SIOSKHIEUKH) => Ok(0x1138),
            Jamo(Position::CHOSEONG, Lettername::SIOSTHIEUTH) => Ok(0x1139),
            Jamo(Position::CHOSEONG, Lettername::SIOSPHIEUPH) => Ok(0x113A),
            Jamo(Position::CHOSEONG, Lettername::SIOSHIEUH) => Ok(0x113B),
            Jamo(Position::CHOSEONG, Lettername::CHITUEUMSIOS) => Ok(0x113C),
            Jamo(Position::CHOSEONG, Lettername::CHITUEUMSSANGSIOS) => Ok(0x113D),
            Jamo(Position::CHOSEONG, Lettername::CEONGCHIEUMSIOS) => Ok(0x113E),
            Jamo(Position::CHOSEONG, Lettername::CEONGCHIEUMSSANGSIOS) => Ok(0x113F),
            Jamo(Position::CHOSEONG, Lettername::PANSIOS) => Ok(0x1140),
            Jamo(Position::CHOSEONG, Lettername::IEUNGKIYEOK) => Ok(0x1141),
            Jamo(Position::CHOSEONG, Lettername::IEUNGTIKEUT) => Ok(0x1142),
            Jamo(Position::CHOSEONG, Lettername::IEUNGMIEUM) => Ok(0x1143),
            Jamo(Position::CHOSEONG, Lettername::IEUNGPIEUP) => Ok(0x1144),
            Jamo(Position::CHOSEONG, Lettername::IEUNGSIOS) => Ok(0x1145),
            Jamo(Position::CHOSEONG, Lettername::IEUNGPANSIOS) => Ok(0x1146),
            Jamo(Position::CHOSEONG, Lettername::SSANGIEUNG) => Ok(0x1147),
            Jamo(Position::CHOSEONG, Lettername::IEUNGCIEUC) => Ok(0x1148),
            Jamo(Position::CHOSEONG, Lettername::IEUNGCHIEUCH) => Ok(0x1149),
            Jamo(Position::CHOSEONG, Lettername::IEUNGTHIEUTH) => Ok(0x114A),
            Jamo(Position::CHOSEONG, Lettername::IEUNGPHIEUPH) => Ok(0x114B),
            Jamo(Position::CHOSEONG, Lettername::YESIEUNG) => Ok(0x114C),
            Jamo(Position::CHOSEONG, Lettername::CIEUCIEUNG) => Ok(0x114D),
            Jamo(Position::CHOSEONG, Lettername::CHITUEUMCIEUC) => Ok(0x114E),
            Jamo(Position::CHOSEONG, Lettername::CHITUEUMSSANGCIEUC) => Ok(0x114F),
            Jamo(Position::CHOSEONG, Lettername::CEONGCHIEUMCIEUC) => Ok(0x1150),
            Jamo(Position::CHOSEONG, Lettername::CEONGCHIEUMSSANGCIEUC) => Ok(0x1151),
            Jamo(Position::CHOSEONG, Lettername::CHIEUCHKHIEUKH) => Ok(0x1152),
            Jamo(Position::CHOSEONG, Lettername::CHIEUCHHIEUH) => Ok(0x1153),
            Jamo(Position::CHOSEONG, Lettername::CHITUEUMCHIEUCH) => Ok(0x1154),
            Jamo(Position::CHOSEONG, Lettername::CEONGCHIEUMCHIEUCH) => Ok(0x1155),
            Jamo(Position::CHOSEONG, Lettername::PHIEUPHPIEUP) => Ok(0x1156),
            Jamo(Position::CHOSEONG, Lettername::KAPYEOUNPHIEUPH) => Ok(0x1157),
            Jamo(Position::CHOSEONG, Lettername::SSANGHIEUH) => Ok(0x1158),
            Jamo(Position::CHOSEONG, Lettername::YEORINHIEUH) => Ok(0x1159),
            Jamo(Position::CHOSEONG, Lettername::KIYEOKTIKEUT) => Ok(0x115A),
            Jamo(Position::CHOSEONG, Lettername::NIEUNSIOS) => Ok(0x115B),
            Jamo(Position::CHOSEONG, Lettername::NIEUNCIEUC) => Ok(0x115C),
            Jamo(Position::CHOSEONG, Lettername::NIEUNHIEUH) => Ok(0x115D),
            Jamo(Position::CHOSEONG, Lettername::TIKEUTRIEUL) => Ok(0x115E),
            Jamo(Position::CHOSEONG, Lettername::FILLER) => Ok(0x115F),
            Jamo(Position::JUNGSEONG, Lettername::FILLER) => Ok(0x1160),
            Jamo(Position::JUNGSEONG, Lettername::A) => Ok(0x1161),
            Jamo(Position::JUNGSEONG, Lettername::AE) => Ok(0x1162),
            Jamo(Position::JUNGSEONG, Lettername::YA) => Ok(0x1163),
            Jamo(Position::JUNGSEONG, Lettername::YAE) => Ok(0x1164),
            Jamo(Position::JUNGSEONG, Lettername::EO) => Ok(0x1165),
            Jamo(Position::JUNGSEONG, Lettername::E) => Ok(0x1166),
            Jamo(Position::JUNGSEONG, Lettername::YEO) => Ok(0x1167),
            Jamo(Position::JUNGSEONG, Lettername::YE) => Ok(0x1168),
            Jamo(Position::JUNGSEONG, Lettername::O) => Ok(0x1169),
            Jamo(Position::JUNGSEONG, Lettername::WA) => Ok(0x116A),
            Jamo(Position::JUNGSEONG, Lettername::WAE) => Ok(0x116B),
            Jamo(Position::JUNGSEONG, Lettername::OE) => Ok(0x116C),
            Jamo(Position::JUNGSEONG, Lettername::YO) => Ok(0x116D),
            Jamo(Position::JUNGSEONG, Lettername::U) => Ok(0x116E),
            Jamo(Position::JUNGSEONG, Lettername::WEO) => Ok(0x116F),
            Jamo(Position::JUNGSEONG, Lettername::WE) => Ok(0x1170),
            Jamo(Position::JUNGSEONG, Lettername::WI) => Ok(0x1171),
            Jamo(Position::JUNGSEONG, Lettername::YU) => Ok(0x1172),
            Jamo(Position::JUNGSEONG, Lettername::EU) => Ok(0x1173),
            Jamo(Position::JUNGSEONG, Lettername::YI) => Ok(0x1174),
            Jamo(Position::JUNGSEONG, Lettername::I) => Ok(0x1175),
            Jamo(Position::JUNGSEONG, Lettername::AO) => Ok(0x1176),
            Jamo(Position::JUNGSEONG, Lettername::AU) => Ok(0x1177),
            Jamo(Position::JUNGSEONG, Lettername::YAO) => Ok(0x1178),
            Jamo(Position::JUNGSEONG, Lettername::YAYO) => Ok(0x1179),
            Jamo(Position::JUNGSEONG, Lettername::EOO) => Ok(0x117A),
            Jamo(Position::JUNGSEONG, Lettername::EOU) => Ok(0x117B),
            Jamo(Position::JUNGSEONG, Lettername::EOEU) => Ok(0x117C),
            Jamo(Position::JUNGSEONG, Lettername::YEOO) => Ok(0x117D),
            Jamo(Position::JUNGSEONG, Lettername::YEOU) => Ok(0x117E),
            Jamo(Position::JUNGSEONG, Lettername::OEO) => Ok(0x117F),
            Jamo(Position::JUNGSEONG, Lettername::Oe) => Ok(0x1180),
            Jamo(Position::JUNGSEONG, Lettername::OYE) => Ok(0x1181),
            Jamo(Position::JUNGSEONG, Lettername::OO) => Ok(0x1182),
            Jamo(Position::JUNGSEONG, Lettername::OU) => Ok(0x1183),
            Jamo(Position::JUNGSEONG, Lettername::YOYA) => Ok(0x1184),
            Jamo(Position::JUNGSEONG, Lettername::YOYAE) => Ok(0x1185),
            Jamo(Position::JUNGSEONG, Lettername::YOYEO) => Ok(0x1186),
            Jamo(Position::JUNGSEONG, Lettername::YOO) => Ok(0x1187),
            Jamo(Position::JUNGSEONG, Lettername::YOI) => Ok(0x1188),
            Jamo(Position::JUNGSEONG, Lettername::UA) => Ok(0x1189),
            Jamo(Position::JUNGSEONG, Lettername::UAE) => Ok(0x118A),
            Jamo(Position::JUNGSEONG, Lettername::UEOEU) => Ok(0x118B),
            Jamo(Position::JUNGSEONG, Lettername::UYE) => Ok(0x118C),
            Jamo(Position::JUNGSEONG, Lettername::UU) => Ok(0x118D),
            Jamo(Position::JUNGSEONG, Lettername::YUA) => Ok(0x118E),
            Jamo(Position::JUNGSEONG, Lettername::YUEO) => Ok(0x118F),
            Jamo(Position::JUNGSEONG, Lettername::YUE) => Ok(0x1190),
            Jamo(Position::JUNGSEONG, Lettername::YUYEO) => Ok(0x1191),
            Jamo(Position::JUNGSEONG, Lettername::YUYE) => Ok(0x1192),
            Jamo(Position::JUNGSEONG, Lettername::YUU) => Ok(0x1193),
            Jamo(Position::JUNGSEONG, Lettername::YUI) => Ok(0x1194),
            Jamo(Position::JUNGSEONG, Lettername::EUU) => Ok(0x1195),
            Jamo(Position::JUNGSEONG, Lettername::EUEU) => Ok(0x1196),
            Jamo(Position::JUNGSEONG, Lettername::YIU) => Ok(0x1197),
            Jamo(Position::JUNGSEONG, Lettername::IA) => Ok(0x1198),
            Jamo(Position::JUNGSEONG, Lettername::IYA) => Ok(0x1199),
            Jamo(Position::JUNGSEONG, Lettername::IO) => Ok(0x119A),
            Jamo(Position::JUNGSEONG, Lettername::IU) => Ok(0x119B),
            Jamo(Position::JUNGSEONG, Lettername::IEU) => Ok(0x119C),
            Jamo(Position::JUNGSEONG, Lettername::IARAEA) => Ok(0x119D),
            Jamo(Position::JUNGSEONG, Lettername::ARAEA) => Ok(0x119E),
            Jamo(Position::JUNGSEONG, Lettername::ARAEAEO) => Ok(0x119F),
            Jamo(Position::JUNGSEONG, Lettername::ARAEAU) => Ok(0x11A0),
            Jamo(Position::JUNGSEONG, Lettername::ARAEAI) => Ok(0x11A1),
            Jamo(Position::JUNGSEONG, Lettername::SSANGARAEA) => Ok(0x11A2),
            Jamo(Position::JUNGSEONG, Lettername::AEU) => Ok(0x11A3),
            Jamo(Position::JUNGSEONG, Lettername::YAU) => Ok(0x11A4),
            Jamo(Position::JUNGSEONG, Lettername::YEOYA) => Ok(0x11A5),
            Jamo(Position::JUNGSEONG, Lettername::OYA) => Ok(0x11A6),
            Jamo(Position::JUNGSEONG, Lettername::OYAE) => Ok(0x11A7),
            Jamo(Position::JONGSEONG, Lettername::KIYEOK) => Ok(0x11A8),
            Jamo(Position::JONGSEONG, Lettername::SSANGKIYEOK) => Ok(0x11A9),
            Jamo(Position::JONGSEONG, Lettername::KIYEOKSIOS) => Ok(0x11AA),
            Jamo(Position::JONGSEONG, Lettername::NIEUN) => Ok(0x11AB),
            Jamo(Position::JONGSEONG, Lettername::NIEUNCIEUC) => Ok(0x11AC),
            Jamo(Position::JONGSEONG, Lettername::NIEUNHIEUH) => Ok(0x11AD),
            Jamo(Position::JONGSEONG, Lettername::TIKEUT) => Ok(0x11AE),
            Jamo(Position::JONGSEONG, Lettername::RIEUL) => Ok(0x11AF),
            Jamo(Position::JONGSEONG, Lettername::RIEULKIYEOK) => Ok(0x11B0),
            Jamo(Position::JONGSEONG, Lettername::RIEULMIEUM) => Ok(0x11B1),
            Jamo(Position::JONGSEONG, Lettername::RIEULPIEUP) => Ok(0x11B2),
            Jamo(Position::JONGSEONG, Lettername::RIEULSIOS) => Ok(0x11B3),
            Jamo(Position::JONGSEONG, Lettername::RIEULTHIEUTH) => Ok(0x11B4),
            Jamo(Position::JONGSEONG, Lettername::RIEULPHIEUPH) => Ok(0x11B5),
            Jamo(Position::JONGSEONG, Lettername::RIEULHIEUH) => Ok(0x11B6),
            Jamo(Position::JONGSEONG, Lettername::MIEUM) => Ok(0x11B7),
            Jamo(Position::JONGSEONG, Lettername::PIEUP) => Ok(0x11B8),
            Jamo(Position::JONGSEONG, Lettername::PIEUPSIOS) => Ok(0x11B9),
            Jamo(Position::JONGSEONG, Lettername::SIOS) => Ok(0x11BA),
            Jamo(Position::JONGSEONG, Lettername::SSANGSIOS) => Ok(0x11BB),
            Jamo(Position::JONGSEONG, Lettername::IEUNG) => Ok(0x11BC),
            Jamo(Position::JONGSEONG, Lettername::CIEUC) => Ok(0x11BD),
            Jamo(Position::JONGSEONG, Lettername::CHIEUCH) => Ok(0x11BE),
            Jamo(Position::JONGSEONG, Lettername::KHIEUKH) => Ok(0x11BF),
            Jamo(Position::JONGSEONG, Lettername::THIEUTH) => Ok(0x11C0),
            Jamo(Position::JONGSEONG, Lettername::PHIEUPH) => Ok(0x11C1),
            Jamo(Position::JONGSEONG, Lettername::HIEUH) => Ok(0x11C2),
            Jamo(Position::JONGSEONG, Lettername::KIYEOKRIEUL) => Ok(0x11C3),
            Jamo(Position::JONGSEONG, Lettername::KIYEOKSIOSKIYEOK) => Ok(0x11C4),
            Jamo(Position::JONGSEONG, Lettername::NIEUNKIYEOK) => Ok(0x11C5),
            Jamo(Position::JONGSEONG, Lettername::NIEUNTIKEUT) => Ok(0x11C6),
            Jamo(Position::JONGSEONG, Lettername::NIEUNSIOS) => Ok(0x11C7),
            Jamo(Position::JONGSEONG, Lettername::NIEUNPANSIOS) => Ok(0x11C8),
            Jamo(Position::JONGSEONG, Lettername::NIEUNTHIEUTH) => Ok(0x11C9),
            Jamo(Position::JONGSEONG, Lettername::TIKEUTKIYEOK) => Ok(0x11CA),
            Jamo(Position::JONGSEONG, Lettername::TIKEUTRIEUL) => Ok(0x11CB),
            Jamo(Position::JONGSEONG, Lettername::RIEULKIYEOKSIOS) => Ok(0x11CC),
            Jamo(Position::JONGSEONG, Lettername::RIEULNIEUN) => Ok(0x11CD),
            Jamo(Position::JONGSEONG, Lettername::RIEULTIKEUT) => Ok(0x11CE),
            Jamo(Position::JONGSEONG, Lettername::RIEULTIKEUTHIEUH) => Ok(0x11CF),
            Jamo(Position::JONGSEONG, Lettername::SSANGRIEUL) => Ok(0x11D0),
            Jamo(Position::JONGSEONG, Lettername::RIEULMIEUMKIYEOK) => Ok(0x11D1),
            Jamo(Position::JONGSEONG, Lettername::RIEULMIEUMSIOS) => Ok(0x11D2),
            Jamo(Position::JONGSEONG, Lettername::RIEULPIEUPSIOS) => Ok(0x11D3),
            Jamo(Position::JONGSEONG, Lettername::RIEULPIEUPHIEUH) => Ok(0x11D4),
            Jamo(Position::JONGSEONG, Lettername::RIEULKAPYEOUNPIEUP) => Ok(0x11D5),
            Jamo(Position::JONGSEONG, Lettername::RIEULSSANGSIOS) => Ok(0x11D6),
            Jamo(Position::JONGSEONG, Lettername::RIEULPANSIOS) => Ok(0x11D7),
            Jamo(Position::JONGSEONG, Lettername::RIEULKHIEUKH) => Ok(0x11D8),
            Jamo(Position::JONGSEONG, Lettername::RIEULYEORINHIEUH) => Ok(0x11D9),
            Jamo(Position::JONGSEONG, Lettername::MIEUMKIYEOK) => Ok(0x11DA),
            Jamo(Position::JONGSEONG, Lettername::MIEUMRIEUL) => Ok(0x11DB),
            Jamo(Position::JONGSEONG, Lettername::MIEUMPIEUP) => Ok(0x11DC),
            Jamo(Position::JONGSEONG, Lettername::MIEUMSIOS) => Ok(0x11DD),
            Jamo(Position::JONGSEONG, Lettername::MIEUMSSANGSIOS) => Ok(0x11DE),
            Jamo(Position::JONGSEONG, Lettername::MIEUMPANSIOS) => Ok(0x11DF),
            Jamo(Position::JONGSEONG, Lettername::MIEUMCHIEUCH) => Ok(0x11E0),
            Jamo(Position::JONGSEONG, Lettername::MIEUMHIEUH) => Ok(0x11E1),
            Jamo(Position::JONGSEONG, Lettername::KAPYEOUNMIEUM) => Ok(0x11E2),
            Jamo(Position::JONGSEONG, Lettername::PIEUPRIEUL) => Ok(0x11E3),
            Jamo(Position::JONGSEONG, Lettername::PIEUPPHIEUPH) => Ok(0x11E4),
            Jamo(Position::JONGSEONG, Lettername::PIEUPHIEUH) => Ok(0x11E5),
            Jamo(Position::JONGSEONG, Lettername::KAPYEOUNPIEUP) => Ok(0x11E6),
            Jamo(Position::JONGSEONG, Lettername::SIOSKIYEOK) => Ok(0x11E7),
            Jamo(Position::JONGSEONG, Lettername::SIOSTIKEUT) => Ok(0x11E8),
            Jamo(Position::JONGSEONG, Lettername::SIOSRIEUL) => Ok(0x11E9),
            Jamo(Position::JONGSEONG, Lettername::SIOSPIEUP) => Ok(0x11EA),
            Jamo(Position::JONGSEONG, Lettername::PANSIOS) => Ok(0x11EB),
            Jamo(Position::JONGSEONG, Lettername::IEUNGKIYEOK) => Ok(0x11EC),
            Jamo(Position::JONGSEONG, Lettername::IEUNGSSANGKIYEOK) => Ok(0x11ED),
            Jamo(Position::JONGSEONG, Lettername::SSANGIEUNG) => Ok(0x11EE),
            Jamo(Position::JONGSEONG, Lettername::IEUNGKHIEUKH) => Ok(0x11EF),
            Jamo(Position::JONGSEONG, Lettername::YESIEUNG) => Ok(0x11F0),
            Jamo(Position::JONGSEONG, Lettername::YESIEUNGSIOS) => Ok(0x11F1),
            Jamo(Position::JONGSEONG, Lettername::YESIEUNGPANSIOS) => Ok(0x11F2),
            Jamo(Position::JONGSEONG, Lettername::PHIEUPHPIEUP) => Ok(0x11F3),
            Jamo(Position::JONGSEONG, Lettername::KAPYEOUNPHIEUPH) => Ok(0x11F4),
            Jamo(Position::JONGSEONG, Lettername::HIEUHNIEUN) => Ok(0x11F5),
            Jamo(Position::JONGSEONG, Lettername::HIEUHRIEUL) => Ok(0x11F6),
            Jamo(Position::JONGSEONG, Lettername::HIEUHMIEUM) => Ok(0x11F7),
            Jamo(Position::JONGSEONG, Lettername::HIEUHPIEUP) => Ok(0x11F8),
            Jamo(Position::JONGSEONG, Lettername::YEORINHIEUH) => Ok(0x11F9),
            Jamo(Position::JONGSEONG, Lettername::KIYEOKNIEUN) => Ok(0x11FA),
            Jamo(Position::JONGSEONG, Lettername::KIYEOKPIEUP) => Ok(0x11FB),
            Jamo(Position::JONGSEONG, Lettername::KIYEOKCHIEUCH) => Ok(0x11FC),
            Jamo(Position::JONGSEONG, Lettername::KIYEOKKHIEUKH) => Ok(0x11FD),
            Jamo(Position::JONGSEONG, Lettername::KIYEOKHIEUH) => Ok(0x11FE),
            Jamo(Position::JONGSEONG, Lettername::SSANGNIEUN) => Ok(0x11FF),
            _ => Err(Error::NotExistJamo(String::from(format!(
                "{:?}, {:?} is not exist in Jamo",
                value.0, value.1
            )))),
        }
    }
}

impl TryFrom<char> for Jamo {
    type Error = self::Error;

    fn try_from(value: char) -> Result<Self, Self::Error> {
        match u32::try_from(value) {
            Ok(c) => c.try_into(),
            Err(_) => Err(Error::NotInRange("not in range char".to_string())),
        }
    }
}

impl TryFrom<Jamo> for char {
    type Error = self::Error;

    fn try_from(value: Jamo) -> Result<Self, Self::Error> {
        match u32::try_from(value) {
            Ok(c) => match c.try_into() {
                Ok(x) => Ok(x),
                Err(_) => Err(Error::NotInRange("not in range char".to_string())),
            },
            Err(_) => Err(Error::NotInRange("not in range char".to_string())),
        }
    }
}

#[derive(Debug, PartialEq, Eq)]
struct ComatibilityJamo(Lettername);

impl TryFrom<u32> for ComatibilityJamo {
    type Error = self::Error;
    fn try_from(value: u32) -> Result<Self, Self::Error> {
        match value {
            0x3131 => Ok(Self(Lettername::KIYEOK)),
            0x3132 => Ok(Self(Lettername::SSANGKIYEOK)),
            0x3133 => Ok(Self(Lettername::KIYEOKSIOS)),
            0x3134 => Ok(Self(Lettername::NIEUN)),
            0x3135 => Ok(Self(Lettername::NIEUNCIEUC)),
            0x3136 => Ok(Self(Lettername::NIEUNHIEUH)),
            0x3137 => Ok(Self(Lettername::TIKEUT)),
            0x3138 => Ok(Self(Lettername::SSANGTIKEUT)),
            0x3139 => Ok(Self(Lettername::RIEUL)),
            0x313A => Ok(Self(Lettername::RIEULKIYEOK)),
            0x313B => Ok(Self(Lettername::RIEULMIEUM)),
            0x313C => Ok(Self(Lettername::RIEULPIEUP)),
            0x313D => Ok(Self(Lettername::RIEULSIOS)),
            0x313E => Ok(Self(Lettername::RIEULTHIEUTH)),
            0x313F => Ok(Self(Lettername::RIEULPHIEUPH)),
            0x3140 => Ok(Self(Lettername::RIEULHIEUH)),
            0x3141 => Ok(Self(Lettername::MIEUM)),
            0x3142 => Ok(Self(Lettername::PIEUP)),
            0x3143 => Ok(Self(Lettername::SSANGPIEUP)),
            0x3144 => Ok(Self(Lettername::PIEUPSIOS)),
            0x3145 => Ok(Self(Lettername::SIOS)),
            0x3146 => Ok(Self(Lettername::SSANGSIOS)),
            0x3147 => Ok(Self(Lettername::IEUNG)),
            0x3148 => Ok(Self(Lettername::CIEUC)),
            0x3149 => Ok(Self(Lettername::SSANGCIEUC)),
            0x314A => Ok(Self(Lettername::CHIEUCH)),
            0x314B => Ok(Self(Lettername::KHIEUKH)),
            0x314C => Ok(Self(Lettername::THIEUTH)),
            0x314D => Ok(Self(Lettername::PHIEUPH)),
            0x314E => Ok(Self(Lettername::HIEUH)),
            0x314F => Ok(Self(Lettername::A)),
            0x3150 => Ok(Self(Lettername::AE)),
            0x3151 => Ok(Self(Lettername::YA)),
            0x3152 => Ok(Self(Lettername::YAE)),
            0x3153 => Ok(Self(Lettername::EO)),
            0x3154 => Ok(Self(Lettername::E)),
            0x3155 => Ok(Self(Lettername::YEO)),
            0x3156 => Ok(Self(Lettername::YE)),
            0x3157 => Ok(Self(Lettername::O)),
            0x3158 => Ok(Self(Lettername::WA)),
            0x3159 => Ok(Self(Lettername::WAE)),
            0x315A => Ok(Self(Lettername::OE)),
            0x315B => Ok(Self(Lettername::YO)),
            0x315C => Ok(Self(Lettername::U)),
            0x315D => Ok(Self(Lettername::WEO)),
            0x315E => Ok(Self(Lettername::WE)),
            0x315F => Ok(Self(Lettername::WI)),
            0x3160 => Ok(Self(Lettername::YU)),
            0x3161 => Ok(Self(Lettername::EU)),
            0x3162 => Ok(Self(Lettername::YI)),
            0x3163 => Ok(Self(Lettername::I)),
            0x3164 => Ok(Self(Lettername::FILLER)),
            0x3165 => Ok(Self(Lettername::SSANGNIEUN)),
            0x3166 => Ok(Self(Lettername::NIEUNTIKEUT)),
            0x3167 => Ok(Self(Lettername::NIEUNSIOS)),
            0x3168 => Ok(Self(Lettername::NIEUNPANSIOS)),
            0x3169 => Ok(Self(Lettername::RIEULKIYEOKSIOS)),
            0x316A => Ok(Self(Lettername::RIEULTIKEUT)),
            0x316B => Ok(Self(Lettername::RIEULPIEUPSIOS)),
            0x316C => Ok(Self(Lettername::RIEULPANSIOS)),
            0x316D => Ok(Self(Lettername::RIEULYEORINHIEUH)),
            0x316E => Ok(Self(Lettername::MIEUMPIEUP)),
            0x316F => Ok(Self(Lettername::MIEUMSIOS)),
            0x3170 => Ok(Self(Lettername::MIEUMPANSIOS)),
            0x3171 => Ok(Self(Lettername::KAPYEOUNMIEUM)),
            0x3172 => Ok(Self(Lettername::PIEUPKIYEOK)),
            0x3173 => Ok(Self(Lettername::PIEUPTIKEUT)),
            0x3174 => Ok(Self(Lettername::PIEUPSIOSKIYEOK)),
            0x3175 => Ok(Self(Lettername::PIEUPSIOSTIKEUT)),
            0x3176 => Ok(Self(Lettername::PIEUPCIEUC)),
            0x3177 => Ok(Self(Lettername::PIEUPTHIEUTH)),
            0x3178 => Ok(Self(Lettername::KAPYEOUNPIEUP)),
            0x3179 => Ok(Self(Lettername::KAPYEOUNSSANGPIEUP)),
            0x317A => Ok(Self(Lettername::SIOSKIYEOK)),
            0x317B => Ok(Self(Lettername::SIOSNIEUN)),
            0x317C => Ok(Self(Lettername::SIOSTIKEUT)),
            0x317D => Ok(Self(Lettername::SIOSPIEUP)),
            0x317E => Ok(Self(Lettername::SIOSCIEUC)),
            0x317F => Ok(Self(Lettername::PANSIOS)),
            0x3180 => Ok(Self(Lettername::SSANGIEUNG)),
            0x3181 => Ok(Self(Lettername::YESIEUNG)),
            0x3182 => Ok(Self(Lettername::YESIEUNGSIOS)),
            0x3183 => Ok(Self(Lettername::YESIEUNGPANSIOS)),
            0x3184 => Ok(Self(Lettername::KAPYEOUNPHIEUPH)),
            0x3185 => Ok(Self(Lettername::SSANGHIEUH)),
            0x3186 => Ok(Self(Lettername::YEORINHIEUH)),
            0x3187 => Ok(Self(Lettername::YOYA)),
            0x3188 => Ok(Self(Lettername::YOYAE)),
            0x3189 => Ok(Self(Lettername::YOI)),
            0x318A => Ok(Self(Lettername::YUYEO)),
            0x318B => Ok(Self(Lettername::YUYE)),
            0x318C => Ok(Self(Lettername::YUI)),
            0x318D => Ok(Self(Lettername::ARAEA)),
            0x318E => Ok(Self(Lettername::ARAEAE)),
            _ => Err(Error::NotInRange(String::from(format!("U+{:X}", value)))),
        }
    }
}

impl TryFrom<ComatibilityJamo> for u32 {
    type Error = self::Error;
    fn try_from(value: ComatibilityJamo) -> Result<Self, Self::Error> {
        match value {
            ComatibilityJamo(Lettername::KIYEOK) => Ok(0x3131),
            ComatibilityJamo(Lettername::SSANGKIYEOK) => Ok(0x3132),
            ComatibilityJamo(Lettername::KIYEOKSIOS) => Ok(0x3133),
            ComatibilityJamo(Lettername::NIEUN) => Ok(0x3134),
            ComatibilityJamo(Lettername::NIEUNCIEUC) => Ok(0x3135),
            ComatibilityJamo(Lettername::NIEUNHIEUH) => Ok(0x3136),
            ComatibilityJamo(Lettername::TIKEUT) => Ok(0x3137),
            ComatibilityJamo(Lettername::SSANGTIKEUT) => Ok(0x3138),
            ComatibilityJamo(Lettername::RIEUL) => Ok(0x3139),
            ComatibilityJamo(Lettername::RIEULKIYEOK) => Ok(0x313A),
            ComatibilityJamo(Lettername::RIEULMIEUM) => Ok(0x313B),
            ComatibilityJamo(Lettername::RIEULPIEUP) => Ok(0x313C),
            ComatibilityJamo(Lettername::RIEULSIOS) => Ok(0x313D),
            ComatibilityJamo(Lettername::RIEULTHIEUTH) => Ok(0x313E),
            ComatibilityJamo(Lettername::RIEULPHIEUPH) => Ok(0x313F),
            ComatibilityJamo(Lettername::RIEULHIEUH) => Ok(0x3140),
            ComatibilityJamo(Lettername::MIEUM) => Ok(0x3141),
            ComatibilityJamo(Lettername::PIEUP) => Ok(0x3142),
            ComatibilityJamo(Lettername::SSANGPIEUP) => Ok(0x3143),
            ComatibilityJamo(Lettername::PIEUPSIOS) => Ok(0x3144),
            ComatibilityJamo(Lettername::SIOS) => Ok(0x3145),
            ComatibilityJamo(Lettername::SSANGSIOS) => Ok(0x3146),
            ComatibilityJamo(Lettername::IEUNG) => Ok(0x3147),
            ComatibilityJamo(Lettername::CIEUC) => Ok(0x3148),
            ComatibilityJamo(Lettername::SSANGCIEUC) => Ok(0x3149),
            ComatibilityJamo(Lettername::CHIEUCH) => Ok(0x314A),
            ComatibilityJamo(Lettername::KHIEUKH) => Ok(0x314B),
            ComatibilityJamo(Lettername::THIEUTH) => Ok(0x314C),
            ComatibilityJamo(Lettername::PHIEUPH) => Ok(0x314D),
            ComatibilityJamo(Lettername::HIEUH) => Ok(0x314E),
            ComatibilityJamo(Lettername::A) => Ok(0x314F),
            ComatibilityJamo(Lettername::AE) => Ok(0x3150),
            ComatibilityJamo(Lettername::YA) => Ok(0x3151),
            ComatibilityJamo(Lettername::YAE) => Ok(0x3152),
            ComatibilityJamo(Lettername::EO) => Ok(0x3153),
            ComatibilityJamo(Lettername::E) => Ok(0x3154),
            ComatibilityJamo(Lettername::YEO) => Ok(0x3155),
            ComatibilityJamo(Lettername::YE) => Ok(0x3156),
            ComatibilityJamo(Lettername::O) => Ok(0x3157),
            ComatibilityJamo(Lettername::WA) => Ok(0x3158),
            ComatibilityJamo(Lettername::WAE) => Ok(0x3159),
            ComatibilityJamo(Lettername::OE) => Ok(0x315A),
            ComatibilityJamo(Lettername::YO) => Ok(0x315B),
            ComatibilityJamo(Lettername::U) => Ok(0x315C),
            ComatibilityJamo(Lettername::WEO) => Ok(0x315D),
            ComatibilityJamo(Lettername::WE) => Ok(0x315E),
            ComatibilityJamo(Lettername::WI) => Ok(0x315F),
            ComatibilityJamo(Lettername::YU) => Ok(0x3160),
            ComatibilityJamo(Lettername::EU) => Ok(0x3161),
            ComatibilityJamo(Lettername::YI) => Ok(0x3162),
            ComatibilityJamo(Lettername::I) => Ok(0x3163),
            ComatibilityJamo(Lettername::FILLER) => Ok(0x3164),
            ComatibilityJamo(Lettername::SSANGNIEUN) => Ok(0x3165),
            ComatibilityJamo(Lettername::NIEUNTIKEUT) => Ok(0x3166),
            ComatibilityJamo(Lettername::NIEUNSIOS) => Ok(0x3167),
            ComatibilityJamo(Lettername::NIEUNPANSIOS) => Ok(0x3168),
            ComatibilityJamo(Lettername::RIEULKIYEOKSIOS) => Ok(0x3169),
            ComatibilityJamo(Lettername::RIEULTIKEUT) => Ok(0x316A),
            ComatibilityJamo(Lettername::RIEULPIEUPSIOS) => Ok(0x316B),
            ComatibilityJamo(Lettername::RIEULPANSIOS) => Ok(0x316C),
            ComatibilityJamo(Lettername::RIEULYEORINHIEUH) => Ok(0x316D),
            ComatibilityJamo(Lettername::MIEUMPIEUP) => Ok(0x316E),
            ComatibilityJamo(Lettername::MIEUMSIOS) => Ok(0x316F),
            ComatibilityJamo(Lettername::MIEUMPANSIOS) => Ok(0x3170),
            ComatibilityJamo(Lettername::KAPYEOUNMIEUM) => Ok(0x3171),
            ComatibilityJamo(Lettername::PIEUPKIYEOK) => Ok(0x3172),
            ComatibilityJamo(Lettername::PIEUPTIKEUT) => Ok(0x3173),
            ComatibilityJamo(Lettername::PIEUPSIOSKIYEOK) => Ok(0x3174),
            ComatibilityJamo(Lettername::PIEUPSIOSTIKEUT) => Ok(0x3175),
            ComatibilityJamo(Lettername::PIEUPCIEUC) => Ok(0x3176),
            ComatibilityJamo(Lettername::PIEUPTHIEUTH) => Ok(0x3177),
            ComatibilityJamo(Lettername::KAPYEOUNPIEUP) => Ok(0x3178),
            ComatibilityJamo(Lettername::KAPYEOUNSSANGPIEUP) => Ok(0x3179),
            ComatibilityJamo(Lettername::SIOSKIYEOK) => Ok(0x317A),
            ComatibilityJamo(Lettername::SIOSNIEUN) => Ok(0x317B),
            ComatibilityJamo(Lettername::SIOSTIKEUT) => Ok(0x317C),
            ComatibilityJamo(Lettername::SIOSPIEUP) => Ok(0x317D),
            ComatibilityJamo(Lettername::SIOSCIEUC) => Ok(0x317E),
            ComatibilityJamo(Lettername::PANSIOS) => Ok(0x317F),
            ComatibilityJamo(Lettername::SSANGIEUNG) => Ok(0x3180),
            ComatibilityJamo(Lettername::YESIEUNG) => Ok(0x3181),
            ComatibilityJamo(Lettername::YESIEUNGSIOS) => Ok(0x3182),
            ComatibilityJamo(Lettername::YESIEUNGPANSIOS) => Ok(0x3183),
            ComatibilityJamo(Lettername::KAPYEOUNPHIEUPH) => Ok(0x3184),
            ComatibilityJamo(Lettername::SSANGHIEUH) => Ok(0x3185),
            ComatibilityJamo(Lettername::YEORINHIEUH) => Ok(0x3186),
            ComatibilityJamo(Lettername::YOYA) => Ok(0x3187),
            ComatibilityJamo(Lettername::YOYAE) => Ok(0x3188),
            ComatibilityJamo(Lettername::YOI) => Ok(0x3189),
            ComatibilityJamo(Lettername::YUYEO) => Ok(0x318A),
            ComatibilityJamo(Lettername::YUYE) => Ok(0x318B),
            ComatibilityJamo(Lettername::YUI) => Ok(0x318C),
            ComatibilityJamo(Lettername::ARAEA) => Ok(0x318D),
            ComatibilityJamo(Lettername::ARAEAE) => Ok(0x318E),
            _ => Err(Error::NotExistJamo(String::from(format!(
                "{:?} is not exist in ComatibilityJamo",
                value.0
            )))),
        }
    }
}

impl TryFrom<Lettername> for ComatibilityJamo {
    type Error = self::Error;

    fn try_from(value: Lettername) -> Result<Self, Self::Error> {
        match value {
            Lettername::KIYEOK => Ok(ComatibilityJamo(Lettername::KIYEOK)),
            Lettername::SSANGKIYEOK => Ok(ComatibilityJamo(Lettername::SSANGKIYEOK)),
            Lettername::KIYEOKSIOS => Ok(ComatibilityJamo(Lettername::KIYEOKSIOS)),
            Lettername::NIEUN => Ok(ComatibilityJamo(Lettername::NIEUN)),
            Lettername::NIEUNCIEUC => Ok(ComatibilityJamo(Lettername::NIEUNCIEUC)),
            Lettername::NIEUNHIEUH => Ok(ComatibilityJamo(Lettername::NIEUNHIEUH)),
            Lettername::TIKEUT => Ok(ComatibilityJamo(Lettername::TIKEUT)),
            Lettername::SSANGTIKEUT => Ok(ComatibilityJamo(Lettername::SSANGTIKEUT)),
            Lettername::RIEUL => Ok(ComatibilityJamo(Lettername::RIEUL)),
            Lettername::RIEULKIYEOK => Ok(ComatibilityJamo(Lettername::RIEULKIYEOK)),
            Lettername::RIEULMIEUM => Ok(ComatibilityJamo(Lettername::RIEULMIEUM)),
            Lettername::RIEULPIEUP => Ok(ComatibilityJamo(Lettername::RIEULPIEUP)),
            Lettername::RIEULSIOS => Ok(ComatibilityJamo(Lettername::RIEULSIOS)),
            Lettername::RIEULTHIEUTH => Ok(ComatibilityJamo(Lettername::RIEULTHIEUTH)),
            Lettername::RIEULPHIEUPH => Ok(ComatibilityJamo(Lettername::RIEULPHIEUPH)),
            Lettername::RIEULHIEUH => Ok(ComatibilityJamo(Lettername::RIEULHIEUH)),
            Lettername::MIEUM => Ok(ComatibilityJamo(Lettername::MIEUM)),
            Lettername::PIEUP => Ok(ComatibilityJamo(Lettername::PIEUP)),
            Lettername::SSANGPIEUP => Ok(ComatibilityJamo(Lettername::SSANGPIEUP)),
            Lettername::PIEUPSIOS => Ok(ComatibilityJamo(Lettername::PIEUPSIOS)),
            Lettername::SIOS => Ok(ComatibilityJamo(Lettername::SIOS)),
            Lettername::SSANGSIOS => Ok(ComatibilityJamo(Lettername::SSANGSIOS)),
            Lettername::IEUNG => Ok(ComatibilityJamo(Lettername::IEUNG)),
            Lettername::CIEUC => Ok(ComatibilityJamo(Lettername::CIEUC)),
            Lettername::SSANGCIEUC => Ok(ComatibilityJamo(Lettername::SSANGCIEUC)),
            Lettername::CHIEUCH => Ok(ComatibilityJamo(Lettername::CHIEUCH)),
            Lettername::KHIEUKH => Ok(ComatibilityJamo(Lettername::KHIEUKH)),
            Lettername::THIEUTH => Ok(ComatibilityJamo(Lettername::THIEUTH)),
            Lettername::PHIEUPH => Ok(ComatibilityJamo(Lettername::PHIEUPH)),
            Lettername::HIEUH => Ok(ComatibilityJamo(Lettername::HIEUH)),
            Lettername::A => Ok(ComatibilityJamo(Lettername::A)),
            Lettername::AE => Ok(ComatibilityJamo(Lettername::AE)),
            Lettername::YA => Ok(ComatibilityJamo(Lettername::YA)),
            Lettername::YAE => Ok(ComatibilityJamo(Lettername::YAE)),
            Lettername::EO => Ok(ComatibilityJamo(Lettername::EO)),
            Lettername::E => Ok(ComatibilityJamo(Lettername::E)),
            Lettername::YEO => Ok(ComatibilityJamo(Lettername::YEO)),
            Lettername::YE => Ok(ComatibilityJamo(Lettername::YE)),
            Lettername::O => Ok(ComatibilityJamo(Lettername::O)),
            Lettername::WA => Ok(ComatibilityJamo(Lettername::WA)),
            Lettername::WAE => Ok(ComatibilityJamo(Lettername::WAE)),
            Lettername::OE => Ok(ComatibilityJamo(Lettername::OE)),
            Lettername::YO => Ok(ComatibilityJamo(Lettername::YO)),
            Lettername::U => Ok(ComatibilityJamo(Lettername::U)),
            Lettername::WEO => Ok(ComatibilityJamo(Lettername::WEO)),
            Lettername::WE => Ok(ComatibilityJamo(Lettername::WE)),
            Lettername::WI => Ok(ComatibilityJamo(Lettername::WI)),
            Lettername::YU => Ok(ComatibilityJamo(Lettername::YU)),
            Lettername::EU => Ok(ComatibilityJamo(Lettername::EU)),
            Lettername::YI => Ok(ComatibilityJamo(Lettername::YI)),
            Lettername::I => Ok(ComatibilityJamo(Lettername::I)),
            Lettername::FILLER => Ok(ComatibilityJamo(Lettername::FILLER)),
            Lettername::SSANGNIEUN => Ok(ComatibilityJamo(Lettername::SSANGNIEUN)),
            Lettername::NIEUNTIKEUT => Ok(ComatibilityJamo(Lettername::NIEUNTIKEUT)),
            Lettername::NIEUNSIOS => Ok(ComatibilityJamo(Lettername::NIEUNSIOS)),
            Lettername::NIEUNPANSIOS => Ok(ComatibilityJamo(Lettername::NIEUNPANSIOS)),
            Lettername::RIEULKIYEOKSIOS => Ok(ComatibilityJamo(Lettername::RIEULKIYEOKSIOS)),
            Lettername::RIEULTIKEUT => Ok(ComatibilityJamo(Lettername::RIEULTIKEUT)),
            Lettername::RIEULPIEUPSIOS => Ok(ComatibilityJamo(Lettername::RIEULPIEUPSIOS)),
            Lettername::RIEULPANSIOS => Ok(ComatibilityJamo(Lettername::RIEULPANSIOS)),
            Lettername::RIEULYEORINHIEUH => Ok(ComatibilityJamo(Lettername::RIEULYEORINHIEUH)),
            Lettername::MIEUMPIEUP => Ok(ComatibilityJamo(Lettername::MIEUMPIEUP)),
            Lettername::MIEUMSIOS => Ok(ComatibilityJamo(Lettername::MIEUMSIOS)),
            Lettername::MIEUMPANSIOS => Ok(ComatibilityJamo(Lettername::MIEUMPANSIOS)),
            Lettername::KAPYEOUNMIEUM => Ok(ComatibilityJamo(Lettername::KAPYEOUNMIEUM)),
            Lettername::PIEUPKIYEOK => Ok(ComatibilityJamo(Lettername::PIEUPKIYEOK)),
            Lettername::PIEUPTIKEUT => Ok(ComatibilityJamo(Lettername::PIEUPTIKEUT)),
            Lettername::PIEUPSIOSKIYEOK => Ok(ComatibilityJamo(Lettername::PIEUPSIOSKIYEOK)),
            Lettername::PIEUPSIOSTIKEUT => Ok(ComatibilityJamo(Lettername::PIEUPSIOSTIKEUT)),
            Lettername::PIEUPCIEUC => Ok(ComatibilityJamo(Lettername::PIEUPCIEUC)),
            Lettername::PIEUPTHIEUTH => Ok(ComatibilityJamo(Lettername::PIEUPTHIEUTH)),
            Lettername::KAPYEOUNPIEUP => Ok(ComatibilityJamo(Lettername::KAPYEOUNPIEUP)),
            Lettername::KAPYEOUNSSANGPIEUP => Ok(ComatibilityJamo(Lettername::KAPYEOUNSSANGPIEUP)),
            Lettername::SIOSKIYEOK => Ok(ComatibilityJamo(Lettername::SIOSKIYEOK)),
            Lettername::SIOSNIEUN => Ok(ComatibilityJamo(Lettername::SIOSNIEUN)),
            Lettername::SIOSTIKEUT => Ok(ComatibilityJamo(Lettername::SIOSTIKEUT)),
            Lettername::SIOSPIEUP => Ok(ComatibilityJamo(Lettername::SIOSPIEUP)),
            Lettername::SIOSCIEUC => Ok(ComatibilityJamo(Lettername::SIOSCIEUC)),
            Lettername::PANSIOS => Ok(ComatibilityJamo(Lettername::PANSIOS)),
            Lettername::SSANGIEUNG => Ok(ComatibilityJamo(Lettername::SSANGIEUNG)),
            Lettername::YESIEUNG => Ok(ComatibilityJamo(Lettername::YESIEUNG)),
            Lettername::YESIEUNGSIOS => Ok(ComatibilityJamo(Lettername::YESIEUNGSIOS)),
            Lettername::YESIEUNGPANSIOS => Ok(ComatibilityJamo(Lettername::YESIEUNGPANSIOS)),
            Lettername::KAPYEOUNPHIEUPH => Ok(ComatibilityJamo(Lettername::KAPYEOUNPHIEUPH)),
            Lettername::SSANGHIEUH => Ok(ComatibilityJamo(Lettername::SSANGHIEUH)),
            Lettername::YEORINHIEUH => Ok(ComatibilityJamo(Lettername::YEORINHIEUH)),
            Lettername::YOYA => Ok(ComatibilityJamo(Lettername::YOYA)),
            Lettername::YOYAE => Ok(ComatibilityJamo(Lettername::YOYAE)),
            Lettername::YOI => Ok(ComatibilityJamo(Lettername::YOI)),
            Lettername::YUYEO => Ok(ComatibilityJamo(Lettername::YUYEO)),
            Lettername::YUYE => Ok(ComatibilityJamo(Lettername::YUYE)),
            Lettername::YUI => Ok(ComatibilityJamo(Lettername::YUI)),
            Lettername::ARAEA => Ok(ComatibilityJamo(Lettername::ARAEA)),
            Lettername::ARAEAE => Ok(ComatibilityJamo(Lettername::ARAEAE)),
            _ => Err(Error::NotExistJamo(String::from(format!(
                "{:?} not in ComatibilityJamo",
                value
            )))),
        }
    }
}

impl TryFrom<char> for ComatibilityJamo {
    type Error = self::Error;

    fn try_from(value: char) -> Result<Self, Self::Error> {
        match u32::try_from(value) {
            Ok(c) => c.try_into(),
            Err(_) => Err(Error::NotInRange("not in range char".to_string())),
        }
    }
}

impl TryFrom<ComatibilityJamo> for char {
    type Error = self::Error;

    fn try_from(value: ComatibilityJamo) -> Result<Self, Self::Error> {
        match u32::try_from(value) {
            Ok(c) => match c.try_into() {
                Ok(x) => Ok(x),
                Err(_) => Err(Error::NotInRange("not in range char".to_string())),
            },
            Err(_) => Err(Error::NotInRange("not in range char".to_string())),
        }
    }
}

impl TryFrom<Jamo> for ComatibilityJamo {
    type Error = self::Error;

    fn try_from(value: Jamo) -> Result<Self, Self::Error> {
        match value.1 {
            Lettername::ARAEAI => Ok(ComatibilityJamo(Lettername::ARAEAI)),
            x => x.try_into(),
        }
    }
}

impl TryFrom<ComatibilityJamo> for Jamo {
    type Error = self::Error;

    fn try_from(value: ComatibilityJamo) -> Result<Self, Self::Error> {
        if let Ok(u) = u32::try_from(value) {
            let jamo_code = match u {
                0x3131 => 0x1100,
                0x3132 => 0x1101,
                0x3133 => 0x11AA,
                0x3134 => 0x1102,
                0x3135 => 0x11AC,
                0x3136 => 0x11AD,
                0x3137 => 0x1103,
                0x3138 => 0x1104,
                0x3139 => 0x1105,
                0x313A => 0x11B0,
                0x313B => 0x11B1,
                0x313C => 0x11B2,
                0x313D => 0x11B3,
                0x313E => 0x11B4,
                0x313F => 0x11B5,
                0x3140 => 0x111A,
                0x3141 => 0x1106,
                0x3142 => 0x1107,
                0x3143 => 0x1108,
                0x3144 => 0x1121,
                0x3145 => 0x1109,
                0x3146 => 0x110A,
                0x3147 => 0x110B,
                0x3148 => 0x110C,
                0x3149 => 0x110D,
                0x314A => 0x110E,
                0x314B => 0x110F,
                0x314C => 0x1110,
                0x314D => 0x1111,
                0x314E => 0x1112,
                0x314F => 0x1161,
                0x3150 => 0x1162,
                0x3151 => 0x1163,
                0x3152 => 0x1164,
                0x3153 => 0x1165,
                0x3154 => 0x1166,
                0x3155 => 0x1167,
                0x3156 => 0x1168,
                0x3157 => 0x1169,
                0x3158 => 0x116A,
                0x3159 => 0x116B,
                0x315A => 0x116C,
                0x315B => 0x116D,
                0x315C => 0x116E,
                0x315D => 0x116F,
                0x315E => 0x1170,
                0x315F => 0x1171,
                0x3160 => 0x1172,
                0x3161 => 0x1173,
                0x3162 => 0x1174,
                0x3163 => 0x1175,
                0x3164 => 0x1160,
                0x3165 => 0x1114,
                0x3166 => 0x1115,
                0x3167 => 0x11C7,
                0x3168 => 0x11C8,
                0x3169 => 0x11CC,
                0x316A => 0x11CE,
                0x316B => 0x11D3,
                0x316C => 0x11D7,
                0x316D => 0x11D9,
                0x316E => 0x111C,
                0x316F => 0x11DD,
                0x3170 => 0x11DF,
                0x3171 => 0x111D,
                0x3172 => 0x111E,
                0x3173 => 0x1120,
                0x3174 => 0x1122,
                0x3175 => 0x1123,
                0x3176 => 0x1127,
                0x3177 => 0x1129,
                0x3178 => 0x112B,
                0x3179 => 0x112C,
                0x317A => 0x112D,
                0x317B => 0x112E,
                0x317C => 0x112F,
                0x317D => 0x1132,
                0x317E => 0x1136,
                0x317F => 0x1140,
                0x3180 => 0x1147,
                0x3181 => 0x114C,
                0x3182 => 0x11F1,
                0x3183 => 0x11F2,
                0x3184 => 0x1157,
                0x3185 => 0x1158,
                0x3186 => 0x1159,
                0x3187 => 0x1184,
                0x3188 => 0x1185,
                0x3189 => 0x1188,
                0x318A => 0x1191,
                0x318B => 0x1192,
                0x318C => 0x1194,
                0x318D => 0x119E,
                0x318E => 0x11A1,
                _ => {
                    return Err(Error::NotExistJamo(String::from(format!(
                        "U+{:X} can not ComatibilityJamo code",
                        u
                    ))))
                }
            };

            Jamo::try_from(jamo_code)
        } else {
            Err(Error::NotExistJamo(
                String::from_str("not ComatibilityJamo").unwrap(),
            ))
        }
    }
}

pub mod keyborad {

    use std::char;

    use unicode_normalization::UnicodeNormalization;

    use super::{ComatibilityJamo, Jamo};

    pub fn dubeolsik_len(word: &str) -> usize {
        word.nfd()
            .map(|x| make_comatibility_jamo(x))
            .fold(0, |acc, x| decompose_dudle_jamo(x).len() + acc)
    }

    pub fn dubeolsik_word(word: &str) -> String {
        word.nfd()
            .map(|x| decompose_dudle_jamo(make_comatibility_jamo(x)))
            .flat_map(|x| {
                x.iter()
                    .map(|x| dubeolsik_to_qwerty(x.to_owned()))
                    .collect::<Vec<char>>()
            })
            .collect()
    }

    pub fn filter_shifted(word: &str) -> bool {
        let shifted = ['ㅃ', 'ㅉ', 'ㄸ', 'ㄲ', 'ㅆ', 'ㅒ', 'ㅖ'];
        word.nfd()
            .map(|x| make_comatibility_jamo(x))
            .any(|x| shifted.contains(&x))
    }

    pub(super) fn make_comatibility_jamo(jamo: char) -> char {
        match ComatibilityJamo::try_from(jamo) {
            Ok(x) => x.try_into().unwrap(),
            Err(_) => match Jamo::try_from(jamo) {
                Ok(x) => match ComatibilityJamo::try_from(x) {
                    Ok(x) => x.try_into().unwrap(),
                    Err(_) => jamo,
                },
                Err(_) => jamo,
            },
        }
    }

    fn decompose_dudle_jamo(jamo: char) -> Vec<char> {
        match jamo {
            'ㄳ' => vec!['ㄱ', 'ㅅ'],
            'ㄵ' => vec!['ㄴ', 'ㅈ'],
            'ㄶ' => vec!['ㄴ', 'ㅎ'],
            'ㄺ' => vec!['ㄹ', 'ㄱ'],
            'ㄻ' => vec!['ㄹ', 'ㅁ'],
            'ㄼ' => vec!['ㄹ', 'ㅂ'],
            'ㄽ' => vec!['ㄹ', 'ㅅ'],
            'ㄾ' => vec!['ㄹ', 'ㅌ'],
            'ㄿ' => vec!['ㄹ', 'ㅍ'],
            'ㅀ' => vec!['ㄹ', 'ㅎ'],
            'ㅄ' => vec!['ㅂ', 'ㅅ'],
            'ㅘ' => vec!['ㅗ', 'ㅏ'],
            'ㅙ' => vec!['ㅗ', 'ㅐ'],
            'ㅚ' => vec!['ㅗ', 'ㅣ'],
            'ㅝ' => vec!['ㅜ', 'ㅓ'],
            'ㅞ' => vec!['ㅜ', 'ㅔ'],
            'ㅟ' => vec!['ㅜ', 'ㅣ'],
            'ㅢ' => vec!['ㅡ', 'ㅣ'],
            x => vec![x],
        }
    }

    pub(super) fn dubeolsik_to_qwerty(jamo: char) -> char {
        match jamo {
            'ㅂ' => 'q',
            'ㅈ' => 'w',
            'ㄷ' => 'e',
            'ㄱ' => 'r',
            'ㅅ' => 't',
            'ㅛ' => 'y',
            'ㅕ' => 'u',
            'ㅑ' => 'i',
            'ㅐ' => 'o',
            'ㅔ' => 'p',
            'ㅁ' => 'a',
            'ㄴ' => 's',
            'ㅇ' => 'd',
            'ㄹ' => 'f',
            'ㅎ' => 'g',
            'ㅗ' => 'h',
            'ㅓ' => 'j',
            'ㅏ' => 'k',
            'ㅣ' => 'l',
            'ㅋ' => 'z',
            'ㅌ' => 'x',
            'ㅊ' => 'c',
            'ㅍ' => 'v',
            'ㅠ' => 'b',
            'ㅜ' => 'n',
            'ㅡ' => 'm',
            _ => jamo,
        }
    }
}

#[cfg(test)]
mod test {
    use unicode_normalization::UnicodeNormalization;

    use crate::hangul::{
        keyborad::{dubeolsik_len, dubeolsik_to_qwerty, dubeolsik_word, filter_shifted},
        ComatibilityJamo, Jamo, Lettername, Position,
    };

    use super::keyborad::make_comatibility_jamo;

    #[test]
    fn u32_to_jamo() {
        assert_eq!(
            0x1100.try_into(),
            Ok(Jamo(Position::CHOSEONG, Lettername::KIYEOK))
        );
        assert_eq!(0x3131.try_into(), Ok(ComatibilityJamo(Lettername::KIYEOK)));
    }

    #[test]
    fn char_to_comatibilityjamo() {
        assert_eq!('ㄱ'.try_into(), Ok(ComatibilityJamo(Lettername::KIYEOK)));
    }

    #[test]
    fn char_to_jamo() {
        assert_eq!(
            Jamo::try_from(ComatibilityJamo::try_from('ㄱ').unwrap()),
            Ok(Jamo(Position::CHOSEONG, Lettername::KIYEOK))
        );
    }

    #[test]
    fn convert_to_dubelseik() {
        assert_eq!(dubeolsik_to_qwerty('ㄱ'), 'r')
    }

    #[test]
    fn convert_to_dubelseik_word() {
        assert_eq!(dubeolsik_word(&"곡".to_string().nfd().to_string()), "rhr");
        assert_eq!(dubeolsik_word(&'ㄱ'.to_string().nfd().to_string()), "r");
        assert_eq!(dubeolsik_word(&'않'.to_string().nfd().to_string()), "dksg");
        assert_eq!(dubeolsik_word(&"rhr".to_string().nfd().to_string()), "rhr")
    }

    #[test]
    fn char_to_comatibilitychar() {
        assert_eq!(
            "곡"
                .nfd()
                .map(|x| make_comatibility_jamo(x))
                .collect::<Vec<char>>(),
            vec!['ㄱ', 'ㅗ', 'ㄱ']
        )
    }

    #[test]
    fn word_len() {
        assert_eq!(dubeolsik_len("곡"), 3);
        assert_eq!(dubeolsik_len("나"), 2);
        assert_eq!(dubeolsik_len("붥"), 5);
        assert_eq!(dubeolsik_len("ㅎ"), 1);
    }

    #[test]
    fn filter_upper() {
        assert_eq!(filter_shifted("곡"), false);
        assert_eq!(filter_shifted("꼭"), true);
        assert_eq!(filter_shifted("곢"), true);
    }
}
